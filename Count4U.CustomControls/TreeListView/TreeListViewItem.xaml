<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:treeListView="clr-namespace:Count4U.CustomControls.TreeListView">

    <LinearGradientBrush x:Key="ListItemSelectedHoverFill" EndPoint="0,1" StartPoint="0,0" x:Shared="true">
        <GradientStop Color="#FFEAF9FF" Offset="0"/>
        <GradientStop Color="#FFC9EDFD" Offset="1"/>
    </LinearGradientBrush>

    <Style x:Key="{x:Type treeListView:TreeListViewItem}" TargetType="{x:Type treeListView:TreeListViewItem}" BasedOn="{StaticResource {x:Type TreeViewItem}}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <!--<Setter Property="FocusVisualStyle" Value="{StaticResource [0] Ñ}" />-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type treeListView:TreeListViewItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Border Name="Bd" 
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                CornerRadius="2" 
                                Padding="{TemplateBinding Padding}" 
                                SnapsToDevicePixels="True">
                            <GridViewRowPresenter Name="PART_Header" Content="{TemplateBinding Header}" Columns="{Binding Path=Columns, RelativeSource={RelativeSource AncestorType={x:Type treeListView:TreeListView}}}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ItemsPresenter Name="ItemsHost" Grid.Row="1" Grid.ColumnSpan="2" />
                    </Grid>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsExpanded" Value="False">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <Trigger SourceName="Bd" Property="IsMouseOver" Value="True">
                            <Setter Property="BorderThickness" Value="1" />
                            <Setter Property="BorderBrush" Value="#FF98DDFB" />
                            <Setter Property="Background" Value="{StaticResource ListItemSelectedHoverFill}">
<!--                                <Setter.Value>-->
<!--                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">-->
<!--                                        <GradientStop Color="#FFFAFBFD" Offset="0"/>-->
<!--                                        <GradientStop Color="#FFEBF3FD" Offset="1"/>-->
<!--                                    </LinearGradientBrush>-->
<!--                                </Setter.Value>-->
                            </Setter>
                        </Trigger>

                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="BorderThickness" Value="1" />
                            <Setter Property="BorderBrush" Value="Black" />
                            <Setter Property="Background" Value="{StaticResource ListItemSelectedHoverFill}">
<!--                                <Setter.Value>-->
<!--                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">-->
<!--                                        <GradientStop Color="#FFDCEBFC" Offset="0.5"/>-->
<!--                                        <GradientStop Color="#FFC1DBFC" Offset="1"/>-->
<!--                                    </LinearGradientBrush>-->
<!--                                </Setter.Value>-->
                            </Setter>
                        </Trigger>

                        <!---->
<!--                        <Trigger Property="IsSelected" Value="True">-->
                        <!--                            <Setter TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Background" />-->
                        <!--                            <Setter Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Foreground" />-->
                        <!--                        </Trigger>-->
                        <!--                        <MultiTrigger>-->
                        <!--                            <MultiTrigger.Conditions>-->
                        <!--                                <Condition Property="IsSelected" Value="True" />-->
                        <!--                                <Condition Property="IsSelectionActive" Value="False" />-->
                        <!--                            </MultiTrigger.Conditions>-->
                        <!--                            <Setter TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Property="Background" />-->
                        <!--                            <Setter Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Foreground" />-->
                        <!--                        </MultiTrigger>-->

                        <!---->
<!--                        <Trigger Property="IsSelected"-->
                        <!--                       Value="true">-->
                        <!--                            <Setter TargetName="Bd"-->
                        <!--                        Property="Background"-->
                        <!--                        Value="{DynamicResource -->
                        <!--                          {x:Static SystemColors.HighlightBrushKey}}"/>-->
                        <!--                            <Setter Property="Foreground"-->
                        <!--                        Value="{DynamicResource -->
                        <!--                          {x:Static SystemColors.HighlightTextBrushKey}}"/>-->
                        <!--                        </Trigger>-->
                        <!---->
<!--                        <MultiTrigger>-->
                        <!--                            <MultiTrigger.Conditions>-->
                        <!--                                <Condition Property="IsSelected"-->
                        <!--                             Value="true"/>-->
                        <!--                                <Condition Property="IsSelectionActive"-->
                        <!--                             Value="false"/>-->
                        <!--                            </MultiTrigger.Conditions>-->
                        <!--                            <Setter TargetName="Bd"-->
                        <!--                        Property="Background"-->
                        <!--                        Value="{DynamicResource -->
                        <!--                          {x:Static SystemColors.ControlBrushKey}}"/>-->
                        <!--                            <Setter Property="Foreground"-->
                        <!--                        Value="{DynamicResource -->
                        <!--                          {x:Static SystemColors.ControlTextBrushKey}}"/>-->
                        <!--                        </MultiTrigger>-->

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Foreground" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>