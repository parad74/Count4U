<UserControl x:Class="Count4U.Planogram.View.PlanTreeView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:renameTreeViewControl="clr-namespace:Count4U.CustomControls.RenameTreeViewControl;assembly=Count4U.CustomControls"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <Grid >
        <Grid.Resources>
            <BooleanToVisibilityConverter x:Key="boolToVis"></BooleanToVisibilityConverter>
        </Grid.Resources>
        <renameTreeViewControl:RenameTreeView Margin="0,0,0,0"  ItemsSource="{Binding Path=Items}" HorizontalAlignment="Stretch" >
            <renameTreeViewControl:RenameTreeView.ItemContainerStyle>
                <Style TargetType="{x:Type renameTreeViewControl:RenameTreeViewItem}">
                    <Style.Resources>
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
                        <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Transparent" />
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
                        <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}" Color="Black" />
                    </Style.Resources>

                    <Setter Property="IsExpanded" Value="{Binding Path=IsExpanded, Mode=TwoWay}"></Setter>
                    <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}"></Setter>
                    <Setter Property="VerticalContentAlignment" Value="Center" />

                    <Setter Property="RenameText" Value="{Binding Path=RenameText, Mode=TwoWay}"></Setter>
                    <Setter Property="CanRename" Value="{Binding Path=CanRename, Mode=TwoWay}"></Setter>

                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="BorderThickness" Value="1"></Setter>
                            <Setter Property="BorderBrush" Value="DeepSkyBlue"></Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </renameTreeViewControl:RenameTreeView.ItemContainerStyle>
            <renameTreeViewControl:RenameTreeView.ItemTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding Path=Children}">
                    <StackPanel Orientation="Horizontal" Margin="0,2,5,2">

                        <Image Source="/Count4U.Media;component/Icons/plan/lock.png"
                               Width="16"
                               Height="16"
                               Margin="0,0,2,0"                               
                               Visibility="{Binding Path=LockVisible, Converter={StaticResource boolToVis}}"
                               >
                            <Image.Style>
                                <Style TargetType="{x:Type Image}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsLocked}" Value="True">
                                            <Setter Property="Opacity" Value="1"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=IsLocked}" Value="False">
                                            <Setter Property="Opacity" Value="0.2"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>

                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseLeftButtonUp">
                                    <i:InvokeCommandAction Command="{Binding Path=LockCommand}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>

                        </Image>

                        <TextBlock Text="{Binding Path=Text}" VerticalAlignment="Center" HorizontalAlignment="Left">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsCheckedVisible}" Value="True">
                                            <Setter Property="Visibility" Value="Collapsed"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=IsCheckedVisible}" Value="False">
                                            <Setter Property="Visibility" Value="Visible"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>

                        </TextBlock>
                        <!--                        Content="{Binding Path=Text}"-->
                        <Grid>

                            <Grid.Style>
                                <Style TargetType="{x:Type Grid}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsCheckedVisible}" Value="True">
                                            <Setter Property="Visibility" Value="Visible"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=IsCheckedVisible}" Value="False">
                                            <Setter Property="Visibility" Value="Collapsed"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                            </Grid.ColumnDefinitions>

                            <CheckBox Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Left" IsChecked="{Binding Path=IsChecked}">

                            </CheckBox>

                            <TextBlock Grid.Column="1" VerticalAlignment="Center" Margin="3,0,0,0" Text="{Binding Path=Text}">
                               <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseLeftButtonUp">
                                    <i:InvokeCommandAction Command="{Binding Path=CheckCommand}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            </TextBlock>
                        </Grid>

                    </StackPanel>
                </HierarchicalDataTemplate>
            </renameTreeViewControl:RenameTreeView.ItemTemplate>
        </renameTreeViewControl:RenameTreeView>
    </Grid>
</UserControl>
